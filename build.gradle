plugins {
    id 'java'
}

group = 'me.ho3'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://repo.xenondevs.xyz/releases'
    }
    //maven {
    //    url 'https://repo.andrei1058.dev/releases/'
    //}
}
configurations {
    extraLibs
    implementation.extendsFrom extraLibs
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")
    compileOnly(fileTree("libs"))

    extraLibs "xyz.xenondevs.invui:invui:1.45"
    //compileOnly('com.andrei1058.bedwars:bedwars-api:25.2')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

task fatJar(type: Jar) {
    exclude "**/module-info.class"
    from { configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
